@model PaginatedList<ZooApp.Models.Ticket>

@{
    ViewData["Title"] = "Tickets";
    int visitorCount = (int)ViewData["VisitorCount"]; // This initializes a variable called visitorOCunt which is equaled to the ViewData of VisitorDate parsed to an int's vlaue. which we can then use to shwo what sites to show to the user.
}
<head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" /> <!--Links all the bootsrap icons,buttons and etc to the website so they can be accessed.-->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" /><!-- This link tags links Font Awesome's library of svg icons. These icons can be interacted with using CSS.-->
</head>
<h2>Tickets</h2>

@if (visitorCount == 0)
{
    <div class="alert alert-warning" role="alert">
        <p>No visitors available. Please create visitors first.</p>
        <a asp-action="Index" asp-controller="Visitors" class="btn btn-primary">Go to Visitors</a>
    </div>
}

    
 

    @if (Model.Any())
    {
    <br />
    <br />
    <form asp-action="Index" method="get">
        <div class="form-group">
            <!-- This is the search bar which used the View CurrentFilter , to dispaly certain records that contain that data they searched for.-->
            <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by visitor name or email">
        </div>
        <button type="submit" class="btn btn-primary">
            <i class="fas fa-search"></i> Search <!--Bootsrap icons, which I have linked view the link tag at the top of the page. -->
        </button>
        <br />
        <br />
        <!--Where all the sorting buttons are kept such as name sorting and date sorting.-->
        <button type="submit" name="sortOrder" value="date_desc" class="btn btn-primary"><i class="fas fa-sort"></i> Date of Purchase Descending</button>
        <button type="submit" name="sortOrder" value="Date" class="btn btn-primary"><i class="fas fa-sort"></i> Date of Purchase Ascending</button>
        <button type="submit" name="sortOrder" value="name_desc" class="btn btn-success"><i class="fas fa-sort"></i> Visitor Name Descending</button>
        <button type="submit" name="sortOrder" value="name_asc" class="btn btn-success"><i class="fas fa-sort"></i> Visitor Name Ascending</button>
        <a asp-action="Index" asp-controller="Tickets" class="btn btn-danger">Reset Filters</a>
    </form>
    <br />

    <a asp-action="Create" class="btn btn-success btn-lg">

        <i class="fas fa-dollar-sign fa-spin"></i> Buy Tickets! <!--Added a spin animation to make the button strand out and look nice.-->
    </a>
    <br />
    <br />

        //table with headers and rows of records
        <table class="table table-striped table-hover">
            <thead style="background-color:brown; color:white;">
                <tr>
                    <th>
                        Visitor Name
                    </th>
                    <th>
                        Date of Purchase
                    </th>
                    <th>Event</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <!-- This foreach loop repeats the fields of each record and displays the record accorindgly. The visitor's name, ticket purchase date which is auto completed and the user doesnt have to pick it and finally the name of the even which they are booking for.-->
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Visitor.Name</td>
                        <td>@item.DateOfPurchase.ToShortDateString()</td>
                        <td>@item.Event.Name</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.TicketId" class="btn btn-info"><i class="fas fa-info-circle"></i> Info</a>
                            <a asp-action="Delete" asp-route-id="@item.TicketId" class="btn btn-danger"> Cancel</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        // This is the pagination code that provides us with page navigation. page navigation tells us how many pages of records are left and provides us with buttons to navigate through these pages.
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-searchString="@ViewData["CurrentFilter"]">Previous</a>
                </li>
                <li class="page-item disabled">
                    <span class="page-link">Page @(Model.PageIndex) of @(Model.TotalPages)</span>
                </li>
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-searchString="@ViewData["CurrentFilter"]">Next</a>
                </li>
            </ul>
        </nav>
    }
@if (Model.Count == 0 && visitorCount > 0) // This if statement makes sure that that if the user hasnt created any tickets but has visitors that they are prompted with this alert message informing them to create tickets to get started!
{
    <div class="alert alert-info" role="alert">
        <p>No tickets found. Create tickets for your visitors!</p>
        <a asp-action="Create" class="btn btn-success"><i class="fas fa-plus"></i> Buy Tickets!</a>
    </div>
}


@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js"></script> <!-- Font Awesome script -->
}
