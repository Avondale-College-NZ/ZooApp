@model IEnumerable<ZooApp.Models.VisitorLog>

@{
    ViewData["Title"] = "Comments";
    int visitorCount = (int)ViewData["VisitorCount"];
    var currentUserId = ViewBag.CurrentUserId as string;
}

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css">
<link rel="stylesheet" href="~/css/site.css" />

<h1 class="text-center my-4">Comment Section</h1>
<hr />

<div class="container">
    <div class="row mb-4">
        <div class="col text-end">
            @if (User.Identity.IsAuthenticated && visitorCount > 0)
            {
                <a asp-action="Create" class="btn btn-success btn-lg">
                    <i class="fas fa-comment-dots me-2"></i> Create New
                </a>
            }

            @if (visitorCount == 0 && User.Identity.IsAuthenticated)
            {
                <div class="alert alert-danger" role="alert">
                    <p style="text-align:center">You haven't Created any Visitors Yet'. Please create visitors first to post Comments.</p>
                    <a asp-action="Index" asp-controller="Visitors" class="btn btn-info d-flex justify-content-center" >Go to your Visitors</a>
                </div>
            }
        </div>
    </div>

    <div class="card shadow-sm mb-3 border-0">
        <div class="card-body p-4">
            <ul class="list-unstyled">
                @foreach (var item in Model)
                {
                    <li class="media my-4 p-3 rounded shadow-sm" style="background-color: #f8f4e3;">
                        <div class="media-body">
                            <h5 class="mt-0 mb-1">
                                @Html.DisplayFor(modelItem => item.Visitor.Name)
                                <small class="text-muted">@Html.DisplayFor(modelItem => item.CreatedOn)</small>

                                @if (item.Review == ReviewType.Negative)
                                {
                                    <span class="badge bg-danger text-light">@Html.DisplayFor(modelItem => item.Review)</span>
                                }
                                else if (item.Review == ReviewType.Positive)
                                {
                                    <span class="badge bg-success text-light">@Html.DisplayFor(modelItem => item.Review)</span>
                                }
                                else if (item.Review == ReviewType.Neutral)
                                {
                                    <span class="badge bg-warning text-light">@Html.DisplayFor(modelItem => item.Review)</span>
                                }
                            </h5>
                            @if (item.ModifiedOn.HasValue)
                            {
                                <span class="text-success">Modified on @DateTime.Now</span>
                            }
                            <p>@Html.DisplayFor(modelItem => item.Comments)</p>

                            @if (item.Visitor.CreatedByUserId == currentUserId || User.IsInRole("Admin"))
                            {
                                <div class="text-end">
                                    <a asp-action="Edit" asp-route-id="@item.VisitorLogId" class="btn btn-outline-secondary btn-sm">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>

                                    <a asp-action="Delete" asp-route-id="@item.VisitorLogId" class="btn btn-danger btn-sm">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                </div>
                            }
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
